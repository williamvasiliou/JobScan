// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Color {
  id    Int    @id @default(autoincrement())
  color String @unique

  labels Label[]
}

model Label {
  id    Int    @id @default(autoincrement())
  label String @unique

  color   Color @relation(fields: [colorId], references: [id])
  colorId Int

  labels   AnalysisLabel[]
  keywords KeywordsOnLabels[]
}

model Keyword {
  id      Int    @id @default(autoincrement())
  keyword String @unique

  labels KeywordsOnLabels[]
}

model KeywordsOnLabels {
  label     Label   @relation(fields: [labelId], references: [id])
  labelId   Int
  keyword   Keyword @relation(fields: [keywordId], references: [id])
  keywordId Int

  @@id([labelId, keywordId])
}

model Job {
  id    Int    @id @default(autoincrement())
  title String
  url   String

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  published DateTime?

  jobs     AnalysisJob[]
  sections Section[]
}

model Section {
  id      Int    @id @default(autoincrement())
  header  String
  content String
  job     Job    @relation(fields: [jobId], references: [id])
  jobId   Int
}

model Analysis {
  id        Int      @id @default(autoincrement())
  title     String
  createdAt DateTime @default(now())

  search String
  filter Int
  start  DateTime?
  end    DateTime?

  jobs LabelsOnJobs[]
}

model AnalysisLabel {
  id         Int     @id @default(autoincrement())
  label      Label?  @relation(fields: [labelId], references: [id])
  labelId    Int?
  labelLabel String?

  jobs LabelsOnJobs[]
}

model AnalysisJob {
  id    Int     @id @default(autoincrement())
  title String?
  url   String?

  createdAt DateTime?
  updatedAt DateTime?
  published DateTime?

  job   Job? @relation(fields: [jobId], references: [id])
  jobId Int?

  labels LabelsOnJobs[]
}

model LabelsOnJobs {
  analysis   Analysis @relation(fields: [analysisId], references: [id])
  analysisId Int

  analysisLabel   AnalysisLabel @relation(fields: [analysisLabelId], references: [id])
  analysisLabelId Int

  analysisJob   AnalysisJob @relation(fields: [analysisJobId], references: [id])
  analysisJobId Int

  @@id([analysisId, analysisLabelId, analysisJobId])
}
